# Generated by Django 5.1.2 on 2024-10-28 09:22

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0002_alter_auditlog_resource'),
    ]

    operations = [
        migrations.CreateModel(
            name='DevicePolicyAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'device policy assignment',
                'verbose_name_plural': 'device policy assignments',
                'ordering': ['-assigned_at'],
            },
        ),
        migrations.CreateModel(
            name='DeviceSecurityPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='policy name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('required_os_versions', models.JSONField(default=dict, help_text='JSON of minimum required OS versions', verbose_name='required OS versions')),
                ('required_security_features', models.JSONField(default=list, help_text='List of required security features', verbose_name='required security features')),
                ('max_inactive_days', models.IntegerField(help_text='Maximum days a device can be inactive', validators=[django.core.validators.MinValueValidator(1)], verbose_name='maximum inactive days')),
                ('trust_duration_days', models.IntegerField(help_text='Duration of device trust status in days', validators=[django.core.validators.MinValueValidator(1)], verbose_name='trust duration in days')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'device security policy',
                'verbose_name_plural': 'device security policies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False, verbose_name='primary device')),
                ('nickname', models.CharField(blank=True, max_length=255, verbose_name='device nickname')),
                ('registered_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='registration date')),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20, verbose_name='approval status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'user device',
                'verbose_name_plural': 'user devices',
                'ordering': ['-is_primary', '-registered_at'],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='device UUID')),
                ('device_type', models.CharField(help_text='Type of device (mobile, desktop, tablet, etc.)', max_length=50, verbose_name='device type')),
                ('device_name', models.CharField(blank=True, max_length=255, verbose_name='device name')),
                ('os_type', models.CharField(blank=True, max_length=50, verbose_name='operating system')),
                ('os_version', models.CharField(blank=True, max_length=50, verbose_name='OS version')),
                ('browser_type', models.CharField(blank=True, max_length=50, verbose_name='browser type')),
                ('browser_version', models.CharField(blank=True, max_length=50, verbose_name='browser version')),
                ('last_ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='last IP address')),
                ('is_trusted', models.BooleanField(default=False, verbose_name='trusted device')),
                ('trust_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='trust expiration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_seen_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last seen')),
            ],
            options={
                'verbose_name': 'device',
                'verbose_name_plural': 'devices',
                'ordering': ['-last_seen_at'],
                'indexes': [models.Index(fields=['uuid'], name='user_device_uuid_c4c3ad_idx'), models.Index(fields=['is_trusted', 'trust_expires_at'], name='user_device_is_trus_a95f0f_idx'), models.Index(fields=['last_seen_at'], name='user_device_last_se_3d9b2d_idx')],
            },
        ),
        migrations.AddField(
            model_name='auditlog',
            name='device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='audit_logs', to='user.device'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['device'], name='user_auditl_device__aa5c8e_idx'),
        ),
        migrations.AddField(
            model_name='devicepolicyassignment',
            name='assigned_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_policy_assignments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='devicepolicyassignment',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policy_assignments', to='user.device'),
        ),
        migrations.AddField(
            model_name='devicesecuritypolicy',
            name='departments',
            field=models.ManyToManyField(blank=True, related_name='device_policies', to='user.department'),
        ),
        migrations.AddField(
            model_name='devicepolicyassignment',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_assignments', to='user.devicesecuritypolicy'),
        ),
        migrations.AddField(
            model_name='userdevice',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_devices', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userdevice',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_associations', to='user.device'),
        ),
        migrations.AddField(
            model_name='userdevice',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='devicesecuritypolicy',
            index=models.Index(fields=['name'], name='user_device_name_6d934e_idx'),
        ),
        migrations.AddIndex(
            model_name='devicepolicyassignment',
            index=models.Index(fields=['device', 'policy'], name='user_device_device__59a48b_idx'),
        ),
        migrations.AddIndex(
            model_name='devicepolicyassignment',
            index=models.Index(fields=['assigned_at'], name='user_device_assigne_8acd36_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='devicepolicyassignment',
            unique_together={('device', 'policy')},
        ),
        migrations.AddIndex(
            model_name='userdevice',
            index=models.Index(fields=['user', 'device'], name='user_userde_user_id_9f2a27_idx'),
        ),
        migrations.AddIndex(
            model_name='userdevice',
            index=models.Index(fields=['approval_status'], name='user_userde_approva_9208ff_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userdevice',
            unique_together={('user', 'device')},
        ),
    ]
