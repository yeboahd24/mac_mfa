"""
Django settings for mac project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-0%qisjly^hc^y#e!5dttv(vr=q!ra9jp)krgs3al@v&*jdxrt^"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AUTH_USER_MODEL = "user.User"

# Application definition


OTP_TOTP_ISSUER = "Mesika"
OTP_TOTP_BIN = 6
N_FAILED_ATTEMPTS = 20

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "user",
    "django_otp",
    "django_otp.plugins.otp_totp",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "user.middleware.AuthenticationMiddleware",  # Add this middleware
    # "user.middleware.ResourcePermissionMiddleware",  # Add this middleware
]

ROOT_URLCONF = "mac.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mac.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "file": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": "debug.log",
        },
    },
    "loggers": {
        "user": {
            "handlers": ["file"],
            "level": "INFO",
            "propagate": True,
        },
    },
}

AUTH_USER_MODEL = "user.User"
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "user.authentication.EmailBackend",
]
JWT_SETTINGS = {
    "JWT_SECRET_KEY": "your-secret-key",
    "JWT_REFRESH_SECRET_KEY": "your-refresh-secret-key",  # Different key for refresh tokens
    "ACCESS_TOKEN_LIFETIME": 60,  # minutes
    "REFRESH_TOKEN_LIFETIME": 7,  # days
    "UNPROTECTED_PATHS": [
        "login",
        "register",
        "password/reset",
        "docs",
        "admin",
        "admin/user/action",
        "admin/user/action/add",
    ],
}

JWT_SECRET_KEY = os.environ.get("JWT_SECRET_KEY", JWT_SETTINGS["JWT_SECRET_KEY"])
JWT_REFRESH_SECRET_KEY = os.environ.get(
    "JWT_REFRESH_SECRET_KEY", JWT_SETTINGS["JWT_REFRESH_SECRET_KEY"]
)
ACCESS_TOKEN_LIFETIME = os.environ.get(
    "ACCESS_TOKEN_LIFETIME", JWT_SETTINGS["ACCESS_TOKEN_LIFETIME"]
)
REFRESH_TOKEN_LIFETIME = os.environ.get(
    "REFRESH_TOKEN_LIFETIME", JWT_SETTINGS["REFRESH_TOKEN_LIFETIME"]
)
UNPROTECTED_PATHS = os.environ.get(
    "UNPROTECTED_PATHS", JWT_SETTINGS["UNPROTECTED_PATHS"]
)
